{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","Footer","Loading","baseUrl","RenderMenuItem","dish","Card","CardImg","image","CardImgOverlay","CardTitle","Menu","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","CommentForm","isCommentFormModalOpen","toggleCommentFormModal","handleCommentFormSubmit","values","console","log","JSON","stringify","rating","Fragment","Row","md","Col","select","model","validators","show","messages","text","placeholder","minLength","textarea","rows","DishDetail","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","handleBlur","field","evt","touched","firstname","lastname","telnum","email","agree","contactType","message","handleSubmit","handleInputChange","target","postFeedback","resetFeedbackForm","errors","split","filter","x","role","size","offset","checkbox","About","RenderLeader","Media","tag","left","middle","object","body","heading","RenderContent","leaders","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1a64711.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavbarToggler,\n    Collapse,\n    NavItem,\n    Jumbotron,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen,\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\n            \"Username: \" +\n                this.username.value +\n                \" Password: \" +\n                this.password.value +\n                \" Remember: \" +\n                this.remember.checked\n        );\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img\n                                src=\"assets/images/logo.png\"\n                                height=\"30\"\n                                width=\"41\"\n                                alt=\"Ristorante Con Fusion\"\n                            />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span>{\" \"}\n                                        Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span>{\" \"}\n                                        About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span>{\" \"}\n                                        Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className=\"nav-link\"\n                                        to=\"/contactus\"\n                                    >\n                                        <span className=\"fa fa-address-card fa-lg\"></span>{\" \"}\n                                        Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>{\" \"}\n                                        Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>\n                                    We take inspiration from the World's best\n                                    cuisines, and create a unique fusion\n                                    experience. Our lipsmacking creations will\n                                    tickle your culinary senses!\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal\n                    isOpen={this.state.isModalOpen}\n                    toggle={this.toggleModal}\n                >\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    innerRef={(input) =>\n                                        (this.username = input)\n                                    }\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    innerRef={(input) =>\n                                        (this.password = input)\n                                    }\n                                />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input\n                                        type=\"checkbox\"\n                                        name=\"remember\"\n                                        innerRef={(input) =>\n                                            (this.remember = input)\n                                        }\n                                    />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button\n                                type=\"submit\"\n                                value=\"submit\"\n                                color=\"primary\"\n                            >\n                                Login\n                            </Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li>\n                                <Link to=\"/home\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/aboutus\">About Us</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/menu\">Menu</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/contactus\">Contact Us</Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road\n                            <br />\n                            Clear Water Bay, Kowloon\n                            <br />\n                            HONG KONG\n                            <br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234\n                            5678\n                            <br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321\n                            <br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>:{\" \"}\n                            <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net\n                            </a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a\n                                className=\"btn btn-social-icon btn-google\"\n                                href=\"http://google.com/+\"\n                            >\n                                <i className=\"fa fa-google-plus\"></i>\n                            </a>\n                            <a\n                                className=\"btn btn-social-icon btn-facebook\"\n                                href=\"http://www.facebook.com/profile.php?id=\"\n                            >\n                                <i className=\"fa fa-facebook\"></i>\n                            </a>\n                            <a\n                                className=\"btn btn-social-icon btn-linkedin\"\n                                href=\"http://www.linkedin.com/in/\"\n                            >\n                                <i className=\"fa fa-linkedin\"></i>\n                            </a>\n                            <a\n                                className=\"btn btn-social-icon btn-twitter\"\n                                href=\"http://twitter.com/\"\n                            >\n                                <i className=\"fa fa-twitter\"></i>\n                            </a>\n                            <a\n                                className=\"btn btn-social-icon btn-google\"\n                                href=\"http://youtube.com/\"\n                            >\n                                <i className=\"fa fa-youtube\"></i>\n                            </a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\">\n                                <i className=\"fa fa-envelope-o\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};\n","export const baseUrl = \"http://localhost:3001/\";\n","import React from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardImgOverlay,\n    CardTitle,\n    Breadcrumb,\n    BreadcrumbItem,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nfunction RenderMenuItem({ dish, onClick }) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg\n                    width=\"100%\"\n                    src={baseUrl + dish.image}\n                    alt={dish.name}\n                />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    } else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">{menu}</div>\n            </div>\n        );\n    }\n};\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardTitle,\n    Breadcrumb,\n    BreadcrumbItem,\n    CardBody,\n    CardText,\n    Button,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    Label,\n    Row,\n    Col,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nfunction RenderDish({ dish }) {\n    if (dish != null) {\n        return (\n            <div className='col-12 col-md-5 m-1'>\n                <FadeTransform\n                    in\n                    transformProps={{\n                        exitTransform: \"scale(0.5) translateY(-50%)\",\n                    }}>\n                    <Card>\n                        <CardImg\n                            top\n                            src={baseUrl + dish.image}\n                            alt={dish.name}\n                        />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            </div>\n        );\n    } else {\n        return <div></div>;\n    }\n}\n\nfunction RenderComments({ comments, postComment, dishId }) {\n    if (comments == null) {\n        return <div></div>;\n    }\n    const cmnts = comments.map((comment) => {\n        return (\n            <Fade in>\n                <li key={comment.id}>\n                    <p>{comment.comment}</p>\n                    <p>\n                        -- {comment.author}, &nbsp;\n                        {new Intl.DateTimeFormat(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"long\",\n                            day: \"2-digit\",\n                        }).format(new Date(comment.date))}\n                    </p>\n                </li>\n            </Fade>\n        );\n    });\n    return (\n        <div className='col-12 col-md-5 m-1'>\n            <h4> Comments </h4>\n            <ul className='list-unstyled'>\n                <Stagger in>{cmnts}</Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment} />\n        </div>\n    );\n}\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCommentFormModalOpen: false,\n        };\n\n        this.toggleCommentFormModal = this.toggleCommentFormModal.bind(this);\n        this.handleCommentFormSubmit = this.handleCommentFormSubmit.bind(this);\n    }\n\n    handleCommentFormSubmit(values) {\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        this.props.postComment(\n            this.props.dishId,\n            values.rating,\n            values.author,\n            values.comment\n        );\n    }\n\n    toggleCommentFormModal() {\n        this.setState({\n            isCommentFormModalOpen: !this.state.isCommentFormModalOpen,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline onClick={this.toggleCommentFormModal}>\n                    <span className='fa fa-comments fa-lg'></span> Submit\n                    Comment\n                </Button>\n\n                {/* commentform  Modal */}\n                <Modal\n                    isOpen={this.state.isCommentFormModalOpen}\n                    toggle={this.toggleCommentFormModal}>\n                    <ModalHeader toggle={this.toggleCommentFormModal}>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm\n                            onSubmit={(values) =>\n                                this.handleCommentFormSubmit(values)\n                            }>\n                            {/* rating */}\n                            <Row className='form-group'>\n                                <Label htmlFor='rating' md={12}>\n                                    Rating\n                                </Label>\n                                <Col md={12}>\n                                    <Control.select\n                                        model='.rating'\n                                        className='form-control'\n                                        name='rating'\n                                        id='rating'\n                                        validators={{\n                                            required,\n                                        }}>\n                                        <option>Please Select</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                    <Errors\n                                        className='text-danger'\n                                        model='.author'\n                                        show='touched'\n                                        messages={{\n                                            required: \"Required\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            {/* author */}\n                            <Row className='form-group'>\n                                <Label htmlFor='author' md={12}>\n                                    Your Name\n                                </Label>\n                                <Col md={12}>\n                                    <Control.text\n                                        model='.author'\n                                        id='author'\n                                        name='author'\n                                        placeholder='First Name'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.author'\n                                        show='touched'\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength:\n                                                \"Must be greater than 2 characters\",\n                                            maxLength:\n                                                \"Must be 15 characters or less\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            {/* comment */}\n                            <Row className='form-group'>\n                                <Label htmlFor='comment' md={12}>\n                                    Comment\n                                </Label>\n                                <Col md={12}>\n                                    <Control.textarea\n                                        model='.comment'\n                                        id='comment'\n                                        name='comment'\n                                        rows='6'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.author'\n                                        show='touched'\n                                        messages={{\n                                            required: \"Required\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            {/* submit button */}\n                            <Row className='form-group'>\n                                <Col>\n                                    <Button type='submit' color='primary'>\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    } else if (props.errMess) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    } else if (props.dish != null) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/menu'>Menu</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            {props.dish.name}\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n\n                    <div className='col-12'>\n                        <h3> {props.dish.menu}</h3>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className='row'>\n                    <RenderDish dish={props.dish} />\n                    <RenderComments\n                        comments={props.comments}\n                        postComment={props.postComment}\n                        dishId={props.dish.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default DishDetail;\n","import React from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    CardSubtitle,\n} from \"reactstrap\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { FadeTransform } from \"react-animation-components\";\n\nfunction RenderCard({ item, isLoading, errMess }) {\n    if (isLoading) {\n        return <Loading />;\n    } else if (errMess) {\n        return <h4>{errMess}</h4>;\n    } else\n        return (\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: \"scale(0.5) translateY(-50%)\",\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? (\n                            <CardSubtitle>{item.designation}</CardSubtitle>\n                        ) : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n}\n\nfunction Home(props) {\n    return (\n        <div className='container'>\n            <div className='row align-items-start'>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard\n                        item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}\n                    />\n                </div>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard\n                        item={props.promotion}\n                        isLoading={props.promoLoading}\n                        errMess={props.promoErrMess}\n                    />\n                </div>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard\n                        item={props.leader}\n                        isLoading={props.leaderLoading}\n                        errMess={props.leaderErrMess}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Label,\n    Col,\n    Row,\n} from \"reactstrap\";\nimport { Control, Form, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) =>\n    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: \"\",\n            lastname: \"\",\n            telnum: \"\",\n            email: \"\",\n            agree: false,\n            contactType: \"Tel.\",\n            message: \"\",\n            touched: {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false,\n            },\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value =\n            target.type === \"checkbox\" ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    handleSubmit(values) {\n        // console.log(\"Current State is: \" + JSON.stringify(values));\n        // alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.postFeedback(\n            values.firstname,\n            values.lastname,\n            values.telnum,\n            values.email,\n            values.agree,\n            values.contactType,\n            values.message\n        );\n        this.props.resetFeedbackForm();\n        // event.preventDefault();\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true },\n        });\n    };\n\n    validate(firstname, lastname, telnum, email) {\n        const errors = {\n            firstname: \"\",\n            lastname: \"\",\n            telnum: \"\",\n            email: \"\",\n        };\n\n        if (this.state.touched.firstname && firstname.length < 3)\n            errors.firstname = \"First Name should be >= 3 characters\";\n        else if (this.state.touched.firstname && firstname.length > 10)\n            errors.firstname = \"First Name should be <= 10 characters\";\n\n        if (this.state.touched.lastname && lastname.length < 3)\n            errors.lastname = \"Last Name should be >= 3 characters\";\n        else if (this.state.touched.lastname && lastname.length > 10)\n            errors.lastname = \"Last Name should be <= 10 characters\";\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum = \"Tel. Number should contain only numbers\";\n\n        if (\n            this.state.touched.email &&\n            email.split(\"\").filter((x) => x === \"@\").length !== 1\n        )\n            errors.email = \"Email should contain a @\";\n\n        return errors;\n    }\n\n    render() {\n        // const errors = this.validate(\n        //     this.state.firstname,\n        //     this.state.lastname,\n        //     this.state.telnum,\n        //     this.state.email\n        // );\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/home'>Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className='row row-content'>\n                    <div className='col-12'>\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className='col-12 col-sm-4 offset-sm-1'>\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road\n                            <br />\n                            Clear Water Bay, Kowloon\n                            <br />\n                            HONG KONG\n                            <br />\n                            <i className='fa fa-phone'></i>: +852 1234 5678\n                            <br />\n                            <i className='fa fa-fax'></i>: +852 8765 4321\n                            <br />\n                            <i className='fa fa-envelope'></i>:{\" \"}\n                            <a href='mailto:confusion@food.net'>\n                                confusion@food.net\n                            </a>\n                        </address>\n                    </div>\n                    <div className='col-12 col-sm-6 offset-sm-1'>\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className='col-12 col-sm-11 offset-sm-1'>\n                        <div className='btn-group' role='group'>\n                            <a\n                                role='button'\n                                className='btn btn-primary'\n                                href='tel:+85212345678'>\n                                <i className='fa fa-phone'></i> Call\n                            </a>\n                            <a role='button' className='btn btn-info' href='#'>\n                                <i className='fa fa-skype'></i> Skype\n                            </a>\n                            <a\n                                role='button'\n                                className='btn btn-success'\n                                href='mailto:confusion@food.net'>\n                                <i className='fa fa-envelope-o'></i> Email\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className='row row-content'>\n                    <div className='col-12'>\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className='col-12 col-md-9'>\n                        <Form\n                            model='feedback'\n                            onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor='firstname' md={2}>\n                                    First Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.firstname'\n                                        id='firstname'\n                                        name='firstname'\n                                        placeholder='First Name'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.firstname'\n                                        show='touched'\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength:\n                                                \"Must be greater than 2 characters\",\n                                            maxLength:\n                                                \"Must be 15 characters or less\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='lastname' md={2}>\n                                    Last Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.lastname'\n                                        id='lastname'\n                                        name='lastname'\n                                        placeholder='Last Name'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.lastname'\n                                        show='touched'\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength:\n                                                \"Must be greater than 2 characters\",\n                                            maxLength:\n                                                \"Must be 15 characters or less\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='telnum' md={2}>\n                                    Contact Tel.\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.telnum'\n                                        id='telnum'\n                                        name='telnum'\n                                        placeholder='Tel. Number'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                            isNumber,\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.telnum'\n                                        show='touched'\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength:\n                                                \"Must be greater than 2 numbers\",\n                                            maxLength:\n                                                \"Must be 15 numbers or less\",\n                                            isNumber: \"Must be a number\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='email' md={2}>\n                                    Email\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text\n                                        model='.email'\n                                        id='email'\n                                        name='email'\n                                        placeholder='Email'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            validEmail,\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.email'\n                                        show='touched'\n                                        messages={{\n                                            required: \"Required\",\n                                            validEmail: \"Invalid Email Address\",\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className='form-check'>\n                                        <Label check>\n                                            <Control.checkbox\n                                                model='.agree'\n                                                name='agree'\n                                                className='form-check-input'\n                                            />{\" \"}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select\n                                        model='.contactType'\n                                        name='contactType'\n                                        className='form-control'>\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='message' md={2}>\n                                    Your Feedback\n                                </Label>\n                                <Col md={10}>\n                                    <Control.textarea\n                                        model='.message'\n                                        id='message'\n                                        name='message'\n                                        rows='12'\n                                        className='form-control'\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type='submit' color='primary'>\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// function Contact(props) {}\n\nexport default Contact;\n","import React from \"react\";\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Card,\n    CardBody,\n    CardHeader,\n    Media,\n} from \"reactstrap\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { Link } from \"react-router-dom\";\nimport { Loading } from \"./LoadingComponent\";\nimport { Fade, Stagger } from \"react-animation-components\";\n\nfunction About(props) {\n    function RenderLeader({ leader }) {\n        return (\n            <div key={leader.id} className='col-12 mt-5'>\n                <Media tag='li'>\n                    <Media left middle>\n                        <Media\n                            object\n                            src={baseUrl + leader.image}\n                            alt={leader.name}\n                        />\n                    </Media>\n                    <Media body className='ml-5'>\n                        <Media heading>{leader.name}</Media>\n                        <p>{leader.designation}</p>\n                        <p>{leader.description}</p>\n                    </Media>\n                </Media>\n            </div>\n        );\n    }\n\n    function RenderContent({ leaders, isLoading, errMess }) {\n        if (isLoading) {\n            return <Loading />;\n        } else if (errMess) {\n            return <h4>{errMess}</h4>;\n        } else\n            return (\n                <Stagger in>\n                    {leaders.map((leader) => (\n                        <Fade in key={leader.id}>\n                            <RenderLeader key={leader.id} leader={leader} />\n                        </Fade>\n                    ))}\n                </Stagger>\n            );\n    }\n\n    return (\n        <div className='container'>\n            <div className='row'>\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                        <Link to='/home'>Home</Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className='col-12'>\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className='row row-content'>\n                <div className='col-12 col-md-6'>\n                    <h2>Our History</h2>\n                    <p>\n                        Started in 2010, Ristorante con Fusion quickly\n                        established itself as a culinary icon par excellence in\n                        Hong Kong. With its unique brand of world fusion cuisine\n                        that can be found nowhere else, it enjoys patronage from\n                        the A-list clientele in Hong Kong. Featuring four of the\n                        best three-star Michelin chefs in the world, you never\n                        know what will arrive on your plate the next time you\n                        visit us.\n                    </p>\n                    <p>\n                        The restaurant traces its humble beginnings to{\" \"}\n                        <em>The Frying Pan</em>, a successful chain started by\n                        our CEO, Mr. Peter Pan, that featured for the first time\n                        the world's best cuisines in a pan.\n                    </p>\n                </div>\n                <div className='col-12 col-md-5'>\n                    <Card>\n                        <CardHeader className='bg-primary text-white'>\n                            Facts At a Glance\n                        </CardHeader>\n                        <CardBody>\n                            <dl className='row p-1'>\n                                <dt className='col-6'>Started</dt>\n                                <dd className='col-6'>3 Feb. 2013</dd>\n                                <dt className='col-6'>Major Stake Holder</dt>\n                                <dd className='col-6'>HK Fine Foods Inc.</dd>\n                                <dt className='col-6'>Last Year's Turnover</dt>\n                                <dd className='col-6'>$1,250,375</dd>\n                                <dt className='col-6'>Employees</dt>\n                                <dd className='col-6'>40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className='col-12'>\n                    <Card>\n                        <CardBody className='bg-faded'>\n                            <blockquote className='blockquote'>\n                                <p className='mb-0'>\n                                    You better cut the pizza in four pieces\n                                    because I'm not hungry enough to eat six.\n                                </p>\n                                <footer className='blockquote-footer'>\n                                    Yogi Berra,\n                                    <cite title='Source Title'>\n                                        The Wit and Wisdom of Yogi Berra, P.\n                                        Pepe, Diversion Books, 2014\n                                    </cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className='row row-content'>\n                <div className='col-12'>\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className='col-12'>\n                    <Media list>\n                        <RenderContent\n                            leaders={props.leaders}\n                            isLoading={props.leaderLoading}\n                            errMess={props.leaderErrMess}\n                        />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;\n","import * as ActionTypes from \"./ActionTypes\";\n// import { DISHES } from '../shared/dishes';\nimport { baseUrl } from \"../shared/baseUrl\";\n\n/**.......... Comment............................ */\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment,\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment,\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + \"comments\", {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-type\": \"application/json\",\n        },\n        credentials: \"same-origin\",\n    })\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error(\n                        \"Error \" + response.status + \": \" + response.statusText\n                    );\n                    error.response = response;\n                    throw error;\n                }\n            },\n            ////if no responmse from server\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((response) => dispatch(addComment(response)))\n        .catch((error) => {\n            console.log(\"Post Comments\", error.message);\n            alert(\"Comment could not be posted\\nError\" + error.message);\n        });\n};\n\n/**.......... Feedback ............................ */\n// export const addFeedback = (feedback) => ({\n//     type: ActionTypes.ADD_FEEDBACK,\n//     payload: feedback\n// });\n\nexport const postFeedback =\n    (firstname, lastname, telnum, email, agree, contactType, message) =>\n    (dispatch) => {\n        const newFeedback = {\n            firstname: firstname,\n            lastname: lastname,\n            telnum: telnum,\n            email: email,\n            agree: agree,\n            contactType: contactType,\n            message: message,\n        };\n        newFeedback.date = new Date().toISOString();\n\n        return fetch(baseUrl + \"feedback\", {\n            method: \"POST\",\n            body: JSON.stringify(newFeedback),\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n            credentials: \"same-origin\",\n        })\n            .then(\n                (response) => {\n                    if (response.ok) {\n                        return response;\n                    } else {\n                        var error = new Error(\n                            \"Error \" +\n                                response.status +\n                                \": \" +\n                                response.statusText\n                        );\n                        error.response = response;\n                        throw error;\n                    }\n                },\n                ////if no responmse from server\n                (error) => {\n                    var errmess = new Error(error.message);\n                    throw errmess;\n                }\n            )\n            .then((response) => response.json())\n            .then((response) => alert(JSON.stringify(response)))\n            .catch((error) => {\n                console.log(\"Post Comments\", error.message);\n                alert(\"Comment could not be posted\\nError\" + error.message);\n            });\n    };\n\n/**.......... Dishes............................ */\n//// thunk: function returns an func\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + \"dishes\")\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error(\n                        \"Error \" + response.status + \": \" + response.statusText\n                    );\n                    error.response = response;\n                    throw error;\n                }\n            },\n            ////if no responmse from server\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((dishes) => dispatch(addDishes(dishes)))\n        .catch((error) => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING,\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess,\n});\n\n//function returns an action\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes,\n});\n\n/**.......... Comments............................ */\n//// thunk: function returns an func\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + \"comments\")\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error(\n                        \"Error \" + response.status + \": \" + response.statusText\n                    );\n                    error.response = response;\n                    throw error;\n                }\n            },\n            ////if no responmse from server\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((comments) => dispatch(addComments(comments)))\n        .catch((error) => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess,\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments,\n});\n\n/**.......... promos............................ */\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + \"promotions\")\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error(\n                        \"Error \" + response.status + \": \" + response.statusText\n                    );\n                    error.response = response;\n                    throw error;\n                }\n            },\n            ////if no responmse from server\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((promos) => dispatch(addPromos(promos)))\n        .catch((error) => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING,\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess,\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos,\n});\n\n/**.......... leaders............................ */\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + \"leaders\")\n        .then(\n            (response) => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error(\n                        \"Error \" + response.status + \": \" + response.statusText\n                    );\n                    error.response = response;\n                    throw error;\n                }\n            },\n            ////if no responmse from server\n            (error) => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n        )\n        .then((response) => response.json())\n        .then((leaders) => dispatch(addLeaders(leaders)))\n        .catch((error) => dispatch(leadersFailed(error.message)));\n};\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING,\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess,\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders,\n});\n","export const ADD_COMMENT = \"ADD_COMMENT\";\nexport const ADD_FEEDBACK = \"ADD_FEEDBACK\";\nexport const DISHES_LOADING = \"DISHES_LOADING\";\nexport const DISHES_FAILED = \"DISHES_FAILED\";\nexport const ADD_DISHES = \"ADD_DISHES\";\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\nexport const ADD_PROMOS = \"ADD_PROMOS\";\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\n","import React, { Component } from \"react\";\nimport { actions } from \"react-redux-form\";\nimport Header from \"./HeaderComponent\";\nimport Footer from \"./FooterComponent\";\nimport Menu from \"./MenuComponent\";\nimport DishDetail from \"./DishDetailComponent\";\nimport Home from \"./HomeComponent\";\nimport Contact from \"./ContactComponent\";\nimport About from \"./AboutComponent\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n    postFeedback,\n    postComment,\n    fetchDishes,\n    fetchComments,\n    fetchPromos,\n    fetchLeaders,\n} from \"../redux/ActionCreators\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishId, rating, author, comment) =>\n        dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => {\n        dispatch(fetchDishes());\n    },\n    resetFeedbackForm: () => {\n        dispatch(actions.reset(\"feedback\"));\n    },\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders()),\n    postFeedback: (\n        firstname,\n        lastname,\n        telnum,\n        email,\n        agree,\n        contactType,\n        message\n    ) =>\n        dispatch(\n            postFeedback(\n                firstname,\n                lastname,\n                telnum,\n                email,\n                agree,\n                contactType,\n                message\n            )\n        ),\n});\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={\n                        this.props.dishes.dishes.filter(\n                            (dish) => dish.featured\n                        )[0]\n                    }\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={\n                        this.props.promotions.promotions.filter(\n                            (promo) => promo.featured\n                        )[0]\n                    }\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={\n                        this.props.leaders.leaders.filter(\n                            (leader) => leader.featured\n                        )[0]\n                    }\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        };\n\n        const DishWithId = ({ match }) => {\n            return (\n                <DishDetail\n                    dish={\n                        this.props.dishes.dishes.filter(\n                            (dish) =>\n                                dish.id === parseInt(match.params.dishId, 10)\n                        )[0]\n                    }\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter(\n                        (comment) =>\n                            comment.dishId === parseInt(match.params.dishId, 10)\n                    )}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        };\n\n        return (\n            <div>\n                <Header />\n                <div>\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={this.props.location.key}\n                            classNames='page'\n                            timeout={300}>\n                            <Switch location={this.props.location}>\n                                <Route path='/home' component={HomePage} />\n                                <Route\n                                    exact\n                                    path='/aboutus'\n                                    component={() => (\n                                        <About\n                                            leaders={this.props.leaders.leaders}\n                                            leaderLoading={\n                                                this.props.leaders.isLoading\n                                            }\n                                            leaderErrMess={\n                                                this.props.leaders.errMess\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    exact\n                                    path='/menu'\n                                    component={() => (\n                                        <Menu dishes={this.props.dishes} />\n                                    )}\n                                />\n                                <Route\n                                    path='/menu/:dishId'\n                                    component={DishWithId}\n                                />\n                                <Route\n                                    exact\n                                    path='/contactus'\n                                    component={() => (\n                                        <Contact\n                                            resetFeedbackForm={\n                                                this.props.resetFeedbackForm\n                                            }\n                                            postFeedback={\n                                                this.props.postFeedback\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Redirect to='/home' />\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Dishes = (\n    state = { isLoading: true, errMess: null, dishes: [] },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                dishes: action.payload,\n            };\n\n        case ActionTypes.DISHES_LOADING:\n            return { ...state, isLoading: true, errMess: null, dishes: [] };\n\n        case ActionTypes.DISHES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, errMess: null, comments: action.payload };\n\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, errMess: action.payload };\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment) };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Promotions = (\n    state = { isLoading: true, errMess: null, promotions: [] },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                promotions: action.payload,\n            };\n\n        case ActionTypes.PROMOS_LOADING:\n            return { ...state, isLoading: true, errMess: null, promotions: [] };\n\n        case ActionTypes.PROMOS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Leaders = (\n    state = {\n        isLoading: true,\n        errMess: null,\n        leaders: [],\n    },\n    action\n) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                leaders: action.payload,\n            };\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};\n","export const InitialFeedback = {\n    firstname: \"\",\n    lastname: \"\",\n    telnum: \"\",\n    email: \"\",\n    agree: false,\n    contactType: \"Tel.\",\n    message: \"\",\n};\n","import React, { Component } from \"react\";\nimport Main from \"./components/MainComponent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createForms } from \"react-redux-form\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { Dishes } from \"./dishes\";\nimport { Comments } from \"./comments\";\nimport { Promotions } from \"./promotions\";\nimport { Leaders } from \"./leaders\";\nimport { InitialFeedback } from \"./forms\";\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback,\n            }),\n        }),\n        applyMiddleware(thunk, logger)\n    );\n    return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}